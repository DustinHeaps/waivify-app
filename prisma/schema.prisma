generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  clerkId          String    @unique
  stripeCustomerId String?   @unique
  email            String    @unique
  name             String?
  logoUrl          String?
  slug             String?
  companyName      String?
  plan             String    @default("free")
  waiverCount      Int       @default(0)
  teamMembers      Int       @default(1)
  feedbackGiven    Boolean   @default(false)
  renewalDate      DateTime?
  nextSteps        Json?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  lastActiveAt     DateTime  @default(now())

  Waiver   Waiver[]
  Template Template[]
}

model Signature {
  id         String   @id @default(cuid())
  name       String
  date       DateTime
  fileKey    String
  uploadedAt DateTime @default(now())

  waiver   Waiver @relation(name: "WaiverSignature", fields: [waiverId], references: [id], onDelete: Cascade)
  waiverId String @unique
}

model Waiver {
  id        String    @id @default(cuid())
  token     String    @unique
  name      String?
  date      DateTime  @default(now())
  ipAddress String
  terms     Boolean?
  liability Boolean?
  viewedAt  DateTime?
  archived  Boolean   @default(false)
  fields    Json

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  signature Signature? @relation(name: "WaiverSignature")

  templateId String
  template   Template @relation(fields: [templateId], references: [id])
}

model Template {
  id          String   @id @default(cuid())
  name        String
  description String?
  isDefault   Boolean  @default(false)
  fields      Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String?
  user   User?    @relation(fields: [userId], references: [id])
  Waiver Waiver[]
}
